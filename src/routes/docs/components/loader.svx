---
title: Loader
pixi: https://pixijs.download/release/docs/PIXI.Loader.html
---

Preloads the assets (textures, audio, etc) used by your components.
It contains two slots, `loading` and the default. The default slot will not
render until the Loader has finished.

You can show progress by using the `progress` prop from the `loading` slot.

## Usage

```svelte example csr noApp
<script>
  import { Application, Loader, Sprite, Text } from 'svelte-pixi'
  import * as PIXI from 'pixi.js'
</script>

<Application width={400} height={400} antialias backgroundColor={0xffffff}>
  <Loader let:progress resources={['/assets/great-success.png']}>
    <slot slot="loading">
      <Text text={`Loading... ${progress}`} x={200} y={200} anchor={0.5} />
    </slot>

    <Sprite
      texture={PIXI.Texture.from('/assets/great-success.png')}
      x={20}
      y={50}
      width={360}
      height={300}
    />
  </Loader>
</Application>
```

## getLoader()

Loader provides context that can be consumed by child components

```js
import { getLoader } from 'svelte-pixi'

const { loader } = getLoader()
```

| Name     | Type          | Description              |
| -------- | ------------- | ------------------------ |
| `loader` | `PIXI.Loader` | The PIXI.Loader instance |

## getResource()

A helper to get a loaded resource from the Loader

```js
import { getResource } from 'svelte-pixi'

const sprite = getResource('/assets/my-sprite.png')
```
